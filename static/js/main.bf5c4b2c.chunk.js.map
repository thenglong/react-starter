{"version":3,"sources":["helpers/utils/logger.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["logger","base","createDebug","log","console","bind","debug","extend","error","withTag","tag","createLogger","App","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAkCA,IAEeA,EAhCM,WACnB,IAAMC,EAAO,IAAIC,IAHL,UAMZD,EAAKE,IAAMC,QAAQD,IAAIE,KAAKD,SAG5B,IAAIE,EAAQL,EAAKM,OAAO,SACpBC,EAAQP,EAAKM,OAAO,SAExB,MAAO,CACLJ,IAAKF,EACLK,QACAE,QACAC,QAAS,SAAAC,GAEP,MAAO,CACLP,IAAKF,EAAKM,OAAOG,GACjBJ,MAAOA,EAAMC,OAAOG,GACpBF,MAAOA,EAAMD,OAAOG,MAWbC,GClCA,MAA0B,iC,OCwB1BC,MApBf,WAGE,OAFAZ,EAAOS,QAAQ,SAASH,MAAM,SAG5B,qBAAKO,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,qCCCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bf5c4b2c.chunk.js","sourcesContent":["import createDebug from \"debug\"\n\nconst APPID = \"APP_ID\"\n\nconst createLogger = () => {\n  const base = new createDebug(APPID)\n\n  // eslint-disable-next-line no-console\n  base.log = console.log.bind(console)\n\n  //creates new debug instance with extended namespace\n  let debug = base.extend(\"debug\")\n  let error = base.extend(\"error\")\n\n  return {\n    log: base,\n    debug,\n    error,\n    withTag: tag => {\n      // tag logs\n      return {\n        log: base.extend(tag),\n        debug: debug.extend(tag),\n        error: error.extend(tag),\n      }\n    },\n  }\n}\n\n// Auto-enable debug on Dev env\nif (process.env.NODE_ENV === \"development\") {\n  createDebug.enable(APPID + \":*\")\n}\n\nconst logger = createLogger()\n\nexport default logger\n\n// logger.debug(\"hello : \", hi)\n// logger.debug('[RENDERED]:', JSON.stringify({}));\n// logger.debug('activating...');\n// logger.debug('onAuthError', auth);\n// logger.error(error);\n\n// logger.withTag('handleSubmit').debug('authToken', firebase.auth);\n// logger.withTag(\"useRequesting\").debug(\"requesting...\")\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import \"./App.css\"\nimport logger from \"./helpers/utils/logger\"\nimport logo from \"./logo.svg\"\n\nfunction App() {\n  logger.withTag(\"Hello\").debug(\"Hello\")\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          With debug logger\n        </a>\n      </header>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\n\nimport ReactDOM from \"react-dom\"\n\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}